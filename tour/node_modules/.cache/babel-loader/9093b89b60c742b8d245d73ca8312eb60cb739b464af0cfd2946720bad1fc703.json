{"ast":null,"code":"\"use client\";\n\n// src/use-toast.ts\nimport { mapPropsVariants, useProviderContext } from \"@heroui/system\";\nimport { toast as toastTheme } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, isEmpty, objectToDeps } from \"@heroui/shared-utils\";\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { useToast as useToastAria } from \"@react-aria/toast\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@heroui/use-is-mobile\";\nvar SWIPE_THRESHOLD_X = 100;\nvar SWIPE_THRESHOLD_Y = 20;\nvar INITIAL_POSITION = 50;\nfunction useToast(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, toastTheme.variantKeys);\n  const {\n    ref,\n    as,\n    title,\n    description,\n    className,\n    classNames,\n    toast,\n    endContent,\n    closeIcon,\n    hideIcon = false,\n    placement: placementProp = \"bottom-right\",\n    isRegionExpanded,\n    hideCloseButton = false,\n    state,\n    total = 1,\n    index = 0,\n    heights,\n    promise: promiseProp,\n    setHeights,\n    toastOffset = 0,\n    motionProps,\n    timeout = 6e3,\n    shouldShowTimeoutProgess = false,\n    icon,\n    onClose,\n    severity,\n    ...otherProps\n  } = props;\n  const {\n    isHovered: isToastHovered,\n    hoverProps\n  } = useHover({\n    isDisabled: false\n  });\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const isMobile = useIsMobile();\n  let placement = placementProp;\n  if (isMobile) {\n    if (placementProp.includes(\"top\")) {\n      placement = \"top-center\";\n    } else {\n      placement = \"bottom-center\";\n    }\n  }\n  const animationRef = useRef(null);\n  const startTime = useRef(null);\n  const progressRef = useRef(0);\n  const progressBarRef = useRef(null);\n  const pausedTime = useRef(0);\n  const timeElapsed = useRef(0);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      progressBarRef.current.style.width = \"0%\";\n    }\n  }, []);\n  useEffect(() => {\n    const updateProgress = timestamp => {\n      if (!timeout) {\n        return;\n      }\n      if (startTime.current === null) {\n        startTime.current = timestamp;\n      }\n      if (isToastHovered || isRegionExpanded || index != total - 1) {\n        pausedTime.current += timestamp - startTime.current;\n        startTime.current = null;\n        animationRef.current = requestAnimationFrame(updateProgress);\n        return;\n      }\n      const elapsed = timestamp - startTime.current + pausedTime.current;\n      timeElapsed.current = elapsed;\n      if (timeElapsed.current >= timeout) {\n        state.close(toast.key);\n      }\n      progressRef.current = Math.min(elapsed / timeout * 100, 100);\n      if (progressBarRef.current) {\n        progressBarRef.current.style.width = `${shouldShowTimeoutProgess ? progressRef.current : 0}%`;\n      }\n      if (progressRef.current < 100) {\n        animationRef.current = requestAnimationFrame(updateProgress);\n      }\n    };\n    animationRef.current = requestAnimationFrame(updateProgress);\n    return () => {\n      if (animationRef.current !== null) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [timeout, shouldShowTimeoutProgess, state, isToastHovered, index, total, isRegionExpanded]);\n  const [isLoading, setIsLoading] = useState(!!promiseProp);\n  useEffect(() => {\n    if (!promiseProp) return;\n    promiseProp.finally(() => {\n      setIsLoading(false);\n    });\n  }, [promiseProp]);\n  const Component = as || \"div\";\n  const loadingIcon = icon;\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(className, classNames == null ? void 0 : classNames.base);\n  const {\n    toastProps,\n    contentProps,\n    titleProps,\n    descriptionProps,\n    closeButtonProps\n  } = useToastAria(props, state, domRef);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const [initialHeight, setInitialHeight] = useState(0);\n  useLayoutEffect(() => {\n    if (!domRef.current || !mounted) {\n      return;\n    }\n    const toastNode = domRef.current;\n    const originalHeight = toastNode.style.height;\n    toastNode.style.height = \"auto\";\n    const computedStyle = getComputedStyle(toastNode);\n    const marginTop = parseFloat(computedStyle.marginTop);\n    const marginBottom = parseFloat(computedStyle.marginBottom);\n    const newHeight = toastNode.getBoundingClientRect().height + marginTop + marginBottom;\n    toastNode.style.height = originalHeight;\n    setInitialHeight(prevHeight => prevHeight !== newHeight ? newHeight : prevHeight);\n    const updatedHeights = [...heights];\n    if (updatedHeights.length > index) {\n      updatedHeights[index] = newHeight;\n    } else {\n      updatedHeights.push(newHeight);\n    }\n    setHeights(updatedHeights);\n  }, [mounted, total, setHeights, index]);\n  let liftHeight = 4;\n  for (let idx = index + 1; idx < total; idx++) {\n    liftHeight += heights[idx];\n  }\n  const frontHeight = heights[heights.length - 1];\n  const slots = useMemo(() => toastTheme({\n    ...variantProps,\n    disableAnimation\n  }), [objectToDeps(variantProps)]);\n  const multiplier = placement.includes(\"top\") ? 1 : -1;\n  const toastVariants = {\n    hidden: {\n      opacity: 0,\n      y: -INITIAL_POSITION * multiplier\n    },\n    visible: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: -INITIAL_POSITION * multiplier\n    }\n  };\n  const [drag, setDrag] = useState(false);\n  const [dragValue, setDragValue] = useState(0);\n  const shouldCloseToast = (offsetX, offsetY) => {\n    const isRight = placement.includes(\"right\");\n    const isLeft = placement.includes(\"left\");\n    const isCenterTop = placement === \"top-center\";\n    const isCenterBottom = placement === \"bottom-center\";\n    if (isRight && offsetX >= SWIPE_THRESHOLD_X || isLeft && offsetX <= -SWIPE_THRESHOLD_X || isCenterTop && offsetY <= -SWIPE_THRESHOLD_Y || isCenterBottom && offsetY >= SWIPE_THRESHOLD_Y) {\n      return true;\n    }\n  };\n  const getDragElasticConstraints = placement2 => {\n    const elasticConstraint = {\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0\n    };\n    if (placement2 === \"bottom-center\") {\n      elasticConstraint.bottom = 1;\n      return elasticConstraint;\n    }\n    if (placement2 === \"top-center\") {\n      elasticConstraint.top = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"right\")) {\n      elasticConstraint.right = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"left\")) {\n      elasticConstraint.left = 1;\n      return elasticConstraint;\n    }\n    elasticConstraint.left = 1;\n    elasticConstraint.right = 1;\n    return elasticConstraint;\n  };\n  let opacityValue = void 0;\n  if (drag && placement === \"bottom-center\" || placement === \"top-center\") {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_Y + 5));\n  } else if (drag) {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_X + 20));\n  }\n  const getToastProps = useCallback((props2 = {}) => ({\n    ref: domRef,\n    className: slots.base({\n      class: clsx(baseStyles, classNames == null ? void 0 : classNames.base)\n    }),\n    \"data-has-title\": dataAttr(!isEmpty(title)),\n    \"data-has-description\": dataAttr(!isEmpty(description)),\n    \"data-placement\": placement,\n    \"data-drag-value\": dragValue,\n    \"data-toast\": true,\n    \"data-animation\": toast.animation,\n    \"aria-label\": \"toast\",\n    onTransitionEnd: () => {\n      if (toast.animation === \"exiting\") {\n        const updatedHeights = heights;\n        updatedHeights.splice(index, 1);\n        setHeights([...updatedHeights]);\n        state.remove(toast.key);\n      }\n    },\n    style: {\n      opacity: opacityValue\n    },\n    ...mergeProps(props2, otherProps, toastProps, hoverProps)\n  }), [slots, classNames, toastProps, hoverProps, toast, toast.animation, toast.key, opacityValue]);\n  const getWrapperProps = useCallback((props2 = {}) => ({\n    className: slots.wrapper({\n      class: classNames == null ? void 0 : classNames.wrapper\n    }),\n    ...props2\n  }), []);\n  const getIconProps = useCallback((props2 = {}) => ({\n    \"aria-label\": \"descriptionIcon\",\n    className: slots.icon({\n      class: classNames == null ? void 0 : classNames.icon\n    }),\n    ...props2\n  }), []);\n  const getLoadingIconProps = useCallback((props2 = {}) => ({\n    className: slots.loadingIcon({\n      class: classNames == null ? void 0 : classNames.loadingIcon\n    }),\n    ...props2\n  }), []);\n  const getContentProps = useCallback((props2 = {}) => ({\n    className: slots.content({\n      class: classNames == null ? void 0 : classNames.content\n    }),\n    ...mergeProps(props2, otherProps, contentProps)\n  }), [contentProps]);\n  const getTitleProps = useCallback((props2 = {}) => ({\n    className: slots.title({\n      class: classNames == null ? void 0 : classNames.title\n    }),\n    ...mergeProps(props2, otherProps, titleProps)\n  }), [titleProps]);\n  const getDescriptionProps = useCallback((props2 = {}) => ({\n    className: slots.description({\n      class: classNames == null ? void 0 : classNames.description\n    }),\n    ...mergeProps(props2, otherProps, descriptionProps)\n  }), [descriptionProps]);\n  const getCloseButtonProps = useCallback((props2 = {}) => ({\n    className: slots.closeButton({\n      class: classNames == null ? void 0 : classNames.closeButton\n    }),\n    \"aria-label\": \"closeButton\",\n    \"data-hidden\": dataAttr(hideCloseButton),\n    ...mergeProps(props2, closeButtonProps, {\n      onPress: chain(() => {\n        setTimeout(() => document.body.focus(), 0);\n      }, onClose)\n    })\n  }), [closeButtonProps, onClose]);\n  const getCloseIconProps = useCallback((props2 = {}) => ({\n    className: slots.closeIcon({\n      class: classNames == null ? void 0 : classNames.closeIcon\n    }),\n    \"aria-label\": \"closeIcon\",\n    ...props2\n  }), []);\n  const getMotionDivProps = useCallback((props2 = {}) => {\n    const isCloseToEnd = total - index - 1 <= 2;\n    const dragDirection = placement === \"bottom-center\" || placement === \"top-center\" ? \"y\" : \"x\";\n    const dragConstraints = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    const dragElastic = getDragElasticConstraints(placement);\n    const animateProps = (() => {\n      if (placement.includes(\"top\")) {\n        return {\n          top: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n          bottom: \"auto\"\n        };\n      } else if (placement.includes(\"bottom\")) {\n        return {\n          bottom: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n          top: \"auto\"\n        };\n      }\n      return {};\n    })();\n    return {\n      animate: {\n        opacity: isCloseToEnd ? 1 : 0,\n        pointerEvents: isCloseToEnd ? \"all\" : \"none\",\n        scaleX: isRegionExpanded || drag ? 1 : 1 - (total - 1 - index) * 0.1,\n        height: isRegionExpanded || drag ? initialHeight : frontHeight,\n        y: 0,\n        ...animateProps\n      },\n      drag: dragDirection,\n      dragConstraints,\n      exit: {\n        opacity: 0\n      },\n      initial: {\n        opacity: 0,\n        scale: 1,\n        y: -40 * multiplier\n      },\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\"\n      },\n      variants: toastVariants,\n      dragElastic,\n      onDragEnd: (_, info) => {\n        const {\n          x: offsetX,\n          y: offsetY\n        } = info.offset;\n        setDrag(false);\n        if (shouldCloseToast(offsetX, offsetY)) {\n          const updatedHeights = heights;\n          updatedHeights.splice(index, 1);\n          setHeights([...updatedHeights]);\n          state.close(toast.key);\n          state.remove(toast.key);\n          return;\n        }\n        setDragValue(0);\n      },\n      onDrag: (_, info) => {\n        let updatedDragValue = 0;\n        if (placement === \"top-center\") {\n          updatedDragValue = -info.offset.y;\n        } else if (placement === \"bottom-center\") {\n          updatedDragValue = info.offset.y;\n        } else if (placement.includes(\"right\")) {\n          updatedDragValue = info.offset.x;\n        } else if (placement.includes(\"left\")) {\n          updatedDragValue = -info.offset.x;\n        }\n        if (updatedDragValue >= 0) {\n          setDragValue(updatedDragValue);\n        }\n      },\n      onDragStart: () => {\n        setDrag(true);\n      },\n      \"data-drag\": dataAttr(drag),\n      \"data-placement\": placement,\n      \"data-drag-value\": dragValue,\n      className: slots.motionDiv({\n        class: classNames == null ? void 0 : classNames.motionDiv\n      }),\n      ...props2,\n      ...motionProps\n    };\n  }, [closeButtonProps, total, index, placement, isRegionExpanded, liftHeight, multiplier, initialHeight, frontHeight, toastVariants, classNames, drag, dataAttr, setDrag, shouldCloseToast, slots, toastOffset]);\n  return {\n    Component,\n    title,\n    description,\n    icon,\n    loadingIcon,\n    domRef,\n    severity,\n    closeIcon,\n    classNames,\n    color: variantProps[\"color\"],\n    hideIcon,\n    placement,\n    state,\n    toast,\n    disableAnimation,\n    isProgressBarVisible: !!timeout,\n    total,\n    index,\n    getWrapperProps,\n    getToastProps,\n    getTitleProps,\n    getContentProps,\n    getDescriptionProps,\n    getCloseButtonProps,\n    getIconProps,\n    getMotionDivProps,\n    getCloseIconProps,\n    getLoadingIconProps,\n    progressBarRef,\n    endContent,\n    slots,\n    isRegionExpanded,\n    liftHeight,\n    frontHeight,\n    initialHeight,\n    isLoading\n  };\n}\nexport { useToast };","map":{"version":3,"names":["mapPropsVariants","useProviderContext","toast","toastTheme","useDOMRef","clsx","dataAttr","isEmpty","objectToDeps","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","useToast","useToastAria","chain","mergeProps","useHover","useIsMobile","SWIPE_THRESHOLD_X","SWIPE_THRESHOLD_Y","INITIAL_POSITION","originalProps","_a","_b","props","variantProps","variantKeys","ref","as","title","description","className","classNames","endContent","closeIcon","hideIcon","placement","placementProp","isRegionExpanded","hideCloseButton","state","total","index","heights","promise","promiseProp","setHeights","toastOffset","motionProps","timeout","shouldShowTimeoutProgess","icon","onClose","severity","otherProps","isHovered","isToastHovered","hoverProps","isDisabled","globalContext","disableAnimation","isMobile","includes","animationRef","startTime","progressRef","progressBarRef","pausedTime","timeElapsed","current","style","width","updateProgress","timestamp","requestAnimationFrame","elapsed","close","key","Math","min","cancelAnimationFrame","isLoading","setIsLoading","finally","Component","loadingIcon","domRef","baseStyles","base","toastProps","contentProps","titleProps","descriptionProps","closeButtonProps","mounted","setMounted","initialHeight","setInitialHeight","toastNode","originalHeight","height","computedStyle","getComputedStyle","marginTop","parseFloat","marginBottom","newHeight","getBoundingClientRect","prevHeight","updatedHeights","length","push","liftHeight","idx","frontHeight","slots","multiplier","toastVariants","hidden","opacity","y","visible","exit","drag","setDrag","dragValue","setDragValue","shouldCloseToast","offsetX","offsetY","isRight","isLeft","isCenterTop","isCenterBottom","getDragElasticConstraints","placement2","elasticConstraint","top","bottom","right","left","opacityValue","max","getToastProps","props2","class","animation","onTransitionEnd","splice","remove","getWrapperProps","wrapper","getIconProps","getLoadingIconProps","getContentProps","content","getTitleProps","getDescriptionProps","getCloseButtonProps","closeButton","onPress","setTimeout","document","body","focus","getCloseIconProps","getMotionDivProps","isCloseToEnd","dragDirection","dragConstraints","dragElastic","animateProps","animate","pointerEvents","scaleX","initial","scale","transition","duration","ease","variants","onDragEnd","_","info","x","offset","onDrag","updatedDragValue","onDragStart","motionDiv","color","isProgressBarVisible"],"sources":["/media/Akunamatata/Course Project/tour/node_modules/@heroui/toast/dist/chunk-A3E4DQTR.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-toast.ts\nimport { mapPropsVariants, useProviderContext } from \"@heroui/system\";\nimport { toast as toastTheme } from \"@heroui/theme\";\nimport { useDOMRef } from \"@heroui/react-utils\";\nimport { clsx, dataAttr, isEmpty, objectToDeps } from \"@heroui/shared-utils\";\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport { useToast as useToastAria } from \"@react-aria/toast\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@heroui/use-is-mobile\";\nvar SWIPE_THRESHOLD_X = 100;\nvar SWIPE_THRESHOLD_Y = 20;\nvar INITIAL_POSITION = 50;\nfunction useToast(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, toastTheme.variantKeys);\n  const {\n    ref,\n    as,\n    title,\n    description,\n    className,\n    classNames,\n    toast,\n    endContent,\n    closeIcon,\n    hideIcon = false,\n    placement: placementProp = \"bottom-right\",\n    isRegionExpanded,\n    hideCloseButton = false,\n    state,\n    total = 1,\n    index = 0,\n    heights,\n    promise: promiseProp,\n    setHeights,\n    toastOffset = 0,\n    motionProps,\n    timeout = 6e3,\n    shouldShowTimeoutProgess = false,\n    icon,\n    onClose,\n    severity,\n    ...otherProps\n  } = props;\n  const { isHovered: isToastHovered, hoverProps } = useHover({\n    isDisabled: false\n  });\n  const globalContext = useProviderContext();\n  const disableAnimation = (_b = (_a = originalProps == null ? void 0 : originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const isMobile = useIsMobile();\n  let placement = placementProp;\n  if (isMobile) {\n    if (placementProp.includes(\"top\")) {\n      placement = \"top-center\";\n    } else {\n      placement = \"bottom-center\";\n    }\n  }\n  const animationRef = useRef(null);\n  const startTime = useRef(null);\n  const progressRef = useRef(0);\n  const progressBarRef = useRef(null);\n  const pausedTime = useRef(0);\n  const timeElapsed = useRef(0);\n  useEffect(() => {\n    if (progressBarRef.current) {\n      progressBarRef.current.style.width = \"0%\";\n    }\n  }, []);\n  useEffect(() => {\n    const updateProgress = (timestamp) => {\n      if (!timeout) {\n        return;\n      }\n      if (startTime.current === null) {\n        startTime.current = timestamp;\n      }\n      if (isToastHovered || isRegionExpanded || index != total - 1) {\n        pausedTime.current += timestamp - startTime.current;\n        startTime.current = null;\n        animationRef.current = requestAnimationFrame(updateProgress);\n        return;\n      }\n      const elapsed = timestamp - startTime.current + pausedTime.current;\n      timeElapsed.current = elapsed;\n      if (timeElapsed.current >= timeout) {\n        state.close(toast.key);\n      }\n      progressRef.current = Math.min(elapsed / timeout * 100, 100);\n      if (progressBarRef.current) {\n        progressBarRef.current.style.width = `${shouldShowTimeoutProgess ? progressRef.current : 0}%`;\n      }\n      if (progressRef.current < 100) {\n        animationRef.current = requestAnimationFrame(updateProgress);\n      }\n    };\n    animationRef.current = requestAnimationFrame(updateProgress);\n    return () => {\n      if (animationRef.current !== null) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [timeout, shouldShowTimeoutProgess, state, isToastHovered, index, total, isRegionExpanded]);\n  const [isLoading, setIsLoading] = useState(!!promiseProp);\n  useEffect(() => {\n    if (!promiseProp) return;\n    promiseProp.finally(() => {\n      setIsLoading(false);\n    });\n  }, [promiseProp]);\n  const Component = as || \"div\";\n  const loadingIcon = icon;\n  const domRef = useDOMRef(ref);\n  const baseStyles = clsx(className, classNames == null ? void 0 : classNames.base);\n  const { toastProps, contentProps, titleProps, descriptionProps, closeButtonProps } = useToastAria(\n    props,\n    state,\n    domRef\n  );\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const [initialHeight, setInitialHeight] = useState(0);\n  useLayoutEffect(() => {\n    if (!domRef.current || !mounted) {\n      return;\n    }\n    const toastNode = domRef.current;\n    const originalHeight = toastNode.style.height;\n    toastNode.style.height = \"auto\";\n    const computedStyle = getComputedStyle(toastNode);\n    const marginTop = parseFloat(computedStyle.marginTop);\n    const marginBottom = parseFloat(computedStyle.marginBottom);\n    const newHeight = toastNode.getBoundingClientRect().height + marginTop + marginBottom;\n    toastNode.style.height = originalHeight;\n    setInitialHeight((prevHeight) => prevHeight !== newHeight ? newHeight : prevHeight);\n    const updatedHeights = [...heights];\n    if (updatedHeights.length > index) {\n      updatedHeights[index] = newHeight;\n    } else {\n      updatedHeights.push(newHeight);\n    }\n    setHeights(updatedHeights);\n  }, [mounted, total, setHeights, index]);\n  let liftHeight = 4;\n  for (let idx = index + 1; idx < total; idx++) {\n    liftHeight += heights[idx];\n  }\n  const frontHeight = heights[heights.length - 1];\n  const slots = useMemo(\n    () => toastTheme({\n      ...variantProps,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps)]\n  );\n  const multiplier = placement.includes(\"top\") ? 1 : -1;\n  const toastVariants = {\n    hidden: { opacity: 0, y: -INITIAL_POSITION * multiplier },\n    visible: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: -INITIAL_POSITION * multiplier }\n  };\n  const [drag, setDrag] = useState(false);\n  const [dragValue, setDragValue] = useState(0);\n  const shouldCloseToast = (offsetX, offsetY) => {\n    const isRight = placement.includes(\"right\");\n    const isLeft = placement.includes(\"left\");\n    const isCenterTop = placement === \"top-center\";\n    const isCenterBottom = placement === \"bottom-center\";\n    if (isRight && offsetX >= SWIPE_THRESHOLD_X || isLeft && offsetX <= -SWIPE_THRESHOLD_X || isCenterTop && offsetY <= -SWIPE_THRESHOLD_Y || isCenterBottom && offsetY >= SWIPE_THRESHOLD_Y) {\n      return true;\n    }\n  };\n  const getDragElasticConstraints = (placement2) => {\n    const elasticConstraint = { top: 0, bottom: 0, right: 0, left: 0 };\n    if (placement2 === \"bottom-center\") {\n      elasticConstraint.bottom = 1;\n      return elasticConstraint;\n    }\n    if (placement2 === \"top-center\") {\n      elasticConstraint.top = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"right\")) {\n      elasticConstraint.right = 1;\n      return elasticConstraint;\n    }\n    if (placement2.includes(\"left\")) {\n      elasticConstraint.left = 1;\n      return elasticConstraint;\n    }\n    elasticConstraint.left = 1;\n    elasticConstraint.right = 1;\n    return elasticConstraint;\n  };\n  let opacityValue = void 0;\n  if (drag && placement === \"bottom-center\" || placement === \"top-center\") {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_Y + 5));\n  } else if (drag) {\n    opacityValue = Math.max(0, 1 - dragValue / (SWIPE_THRESHOLD_X + 20));\n  }\n  const getToastProps = useCallback(\n    (props2 = {}) => ({\n      ref: domRef,\n      className: slots.base({ class: clsx(baseStyles, classNames == null ? void 0 : classNames.base) }),\n      \"data-has-title\": dataAttr(!isEmpty(title)),\n      \"data-has-description\": dataAttr(!isEmpty(description)),\n      \"data-placement\": placement,\n      \"data-drag-value\": dragValue,\n      \"data-toast\": true,\n      \"data-animation\": toast.animation,\n      \"aria-label\": \"toast\",\n      onTransitionEnd: () => {\n        if (toast.animation === \"exiting\") {\n          const updatedHeights = heights;\n          updatedHeights.splice(index, 1);\n          setHeights([...updatedHeights]);\n          state.remove(toast.key);\n        }\n      },\n      style: {\n        opacity: opacityValue\n      },\n      ...mergeProps(props2, otherProps, toastProps, hoverProps)\n    }),\n    [slots, classNames, toastProps, hoverProps, toast, toast.animation, toast.key, opacityValue]\n  );\n  const getWrapperProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),\n      ...props2\n    }),\n    []\n  );\n  const getIconProps = useCallback(\n    (props2 = {}) => ({\n      \"aria-label\": \"descriptionIcon\",\n      className: slots.icon({ class: classNames == null ? void 0 : classNames.icon }),\n      ...props2\n    }),\n    []\n  );\n  const getLoadingIconProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.loadingIcon({ class: classNames == null ? void 0 : classNames.loadingIcon }),\n      ...props2\n    }),\n    []\n  );\n  const getContentProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.content({ class: classNames == null ? void 0 : classNames.content }),\n      ...mergeProps(props2, otherProps, contentProps)\n    }),\n    [contentProps]\n  );\n  const getTitleProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.title({ class: classNames == null ? void 0 : classNames.title }),\n      ...mergeProps(props2, otherProps, titleProps)\n    }),\n    [titleProps]\n  );\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.description({ class: classNames == null ? void 0 : classNames.description }),\n      ...mergeProps(props2, otherProps, descriptionProps)\n    }),\n    [descriptionProps]\n  );\n  const getCloseButtonProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.closeButton({ class: classNames == null ? void 0 : classNames.closeButton }),\n      \"aria-label\": \"closeButton\",\n      \"data-hidden\": dataAttr(hideCloseButton),\n      ...mergeProps(props2, closeButtonProps, {\n        onPress: chain(() => {\n          setTimeout(() => document.body.focus(), 0);\n        }, onClose)\n      })\n    }),\n    [closeButtonProps, onClose]\n  );\n  const getCloseIconProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.closeIcon({ class: classNames == null ? void 0 : classNames.closeIcon }),\n      \"aria-label\": \"closeIcon\",\n      ...props2\n    }),\n    []\n  );\n  const getMotionDivProps = useCallback(\n    (props2 = {}) => {\n      const isCloseToEnd = total - index - 1 <= 2;\n      const dragDirection = placement === \"bottom-center\" || placement === \"top-center\" ? \"y\" : \"x\";\n      const dragConstraints = { left: 0, right: 0, top: 0, bottom: 0 };\n      const dragElastic = getDragElasticConstraints(placement);\n      const animateProps = (() => {\n        if (placement.includes(\"top\")) {\n          return {\n            top: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n            bottom: \"auto\"\n          };\n        } else if (placement.includes(\"bottom\")) {\n          return {\n            bottom: isRegionExpanded || drag ? liftHeight + toastOffset : (total - 1 - index) * 8 + toastOffset,\n            top: \"auto\"\n          };\n        }\n        return {};\n      })();\n      return {\n        animate: {\n          opacity: isCloseToEnd ? 1 : 0,\n          pointerEvents: isCloseToEnd ? \"all\" : \"none\",\n          scaleX: isRegionExpanded || drag ? 1 : 1 - (total - 1 - index) * 0.1,\n          height: isRegionExpanded || drag ? initialHeight : frontHeight,\n          y: 0,\n          ...animateProps\n        },\n        drag: dragDirection,\n        dragConstraints,\n        exit: { opacity: 0 },\n        initial: { opacity: 0, scale: 1, y: -40 * multiplier },\n        transition: { duration: 0.3, ease: \"easeOut\" },\n        variants: toastVariants,\n        dragElastic,\n        onDragEnd: (_, info) => {\n          const { x: offsetX, y: offsetY } = info.offset;\n          setDrag(false);\n          if (shouldCloseToast(offsetX, offsetY)) {\n            const updatedHeights = heights;\n            updatedHeights.splice(index, 1);\n            setHeights([...updatedHeights]);\n            state.close(toast.key);\n            state.remove(toast.key);\n            return;\n          }\n          setDragValue(0);\n        },\n        onDrag: (_, info) => {\n          let updatedDragValue = 0;\n          if (placement === \"top-center\") {\n            updatedDragValue = -info.offset.y;\n          } else if (placement === \"bottom-center\") {\n            updatedDragValue = info.offset.y;\n          } else if (placement.includes(\"right\")) {\n            updatedDragValue = info.offset.x;\n          } else if (placement.includes(\"left\")) {\n            updatedDragValue = -info.offset.x;\n          }\n          if (updatedDragValue >= 0) {\n            setDragValue(updatedDragValue);\n          }\n        },\n        onDragStart: () => {\n          setDrag(true);\n        },\n        \"data-drag\": dataAttr(drag),\n        \"data-placement\": placement,\n        \"data-drag-value\": dragValue,\n        className: slots.motionDiv({ class: classNames == null ? void 0 : classNames.motionDiv }),\n        ...props2,\n        ...motionProps\n      };\n    },\n    [\n      closeButtonProps,\n      total,\n      index,\n      placement,\n      isRegionExpanded,\n      liftHeight,\n      multiplier,\n      initialHeight,\n      frontHeight,\n      toastVariants,\n      classNames,\n      drag,\n      dataAttr,\n      setDrag,\n      shouldCloseToast,\n      slots,\n      toastOffset\n    ]\n  );\n  return {\n    Component,\n    title,\n    description,\n    icon,\n    loadingIcon,\n    domRef,\n    severity,\n    closeIcon,\n    classNames,\n    color: variantProps[\"color\"],\n    hideIcon,\n    placement,\n    state,\n    toast,\n    disableAnimation,\n    isProgressBarVisible: !!timeout,\n    total,\n    index,\n    getWrapperProps,\n    getToastProps,\n    getTitleProps,\n    getContentProps,\n    getDescriptionProps,\n    getCloseButtonProps,\n    getIconProps,\n    getMotionDivProps,\n    getCloseIconProps,\n    getLoadingIconProps,\n    progressBarRef,\n    endContent,\n    slots,\n    isRegionExpanded,\n    liftHeight,\n    frontHeight,\n    initialHeight,\n    isLoading\n  };\n}\n\nexport {\n  useToast\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}