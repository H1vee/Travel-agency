{"ast":null,"code":"var _jsxFileName = \"/media/Akunamatata/Course Project/tour/src/pages/TourDetails/components/InfoSide/InfoSide.tsx\",\n  _s = $RefreshSig$();\nimport { Card, CardBody, CardHeader } from \"@nextui-org/react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"react-router-dom\"; // Для получения id из URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InfoSide = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем ID из URL\n\n  const {\n    isPending,\n    error,\n    data\n  } = useQuery({\n    queryKey: [\"tourData\", id],\n    // Ключ кеша зависит от id\n    queryFn: async () => {\n      const fetched = await fetch(`/api/tours/${id}`);\n      if (!fetched.ok) throw new Error(\"Tour not found\");\n      const rawTour = await fetched.json();\n      console.log(\"Fetched Tour:\", rawTour); // Логируем данные\n\n      const dateFrom = new Date(rawTour.date_from);\n      const dateTo = new Date(rawTour.date_to);\n\n      // Проверяем на валидность дат\n      if (isNaN(dateFrom.getTime()) || isNaN(dateTo.getTime())) {\n        throw new Error(\"Invalid date format\");\n      }\n      return {\n        ...rawTour,\n        date_from: dateFrom,\n        date_to: dateTo\n      };\n    },\n    enabled: !!id // Запрос выполняется только если есть id\n  });\n  if (isPending) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Tour not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InfoSide\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: data.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Rating: \", data.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [data.date_from.toLocaleDateString(), \" -\", \" \", data.date_to.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Duration: \", data.duration, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u041E\\u043F\\u0438\\u0441: \", data.detailed_description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoSide, \"ot4wcFfzLy/62+4Wo6xIRYaFPsU=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = InfoSide;\nvar _c;\n$RefreshReg$(_c, \"InfoSide\");","map":{"version":3,"names":["Card","CardBody","CardHeader","useQuery","useParams","jsxDEV","_jsxDEV","InfoSide","_s","id","isPending","error","data","queryKey","queryFn","fetched","fetch","ok","Error","rawTour","json","console","log","dateFrom","Date","date_from","dateTo","date_to","isNaN","getTime","enabled","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","title","country","rating","toLocaleDateString","duration","detailed_description","_c","$RefreshReg$"],"sources":["/media/Akunamatata/Course Project/tour/src/pages/TourDetails/components/InfoSide/InfoSide.tsx"],"sourcesContent":["import { Card, CardBody, CardHeader } from \"@nextui-org/react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"react-router-dom\"; // Для получения id из URL\n\ninterface Tour {\n  id: number;\n  title: string;\n  status: string;\n  detailed_description: string;\n  rating: number;\n  country: string;\n  date_from: Date;\n  date_to: Date;\n  duration: number;\n}\n\nexport const InfoSide = () => {\n  const { id } = useParams(); // Получаем ID из URL\n\n  const { isPending, error, data } = useQuery({\n    queryKey: [\"tourData\", id], // Ключ кеша зависит от id\n    queryFn: async () => {\n      const fetched = await fetch(`/api/tours/${id}`);\n      if (!fetched.ok) throw new Error(\"Tour not found\");\n      const rawTour: any = await fetched.json();\n\n      console.log(\"Fetched Tour:\", rawTour); // Логируем данные\n\n      const dateFrom = new Date(rawTour.date_from);\n      const dateTo = new Date(rawTour.date_to);\n\n      // Проверяем на валидность дат\n      if (isNaN(dateFrom.getTime()) || isNaN(dateTo.getTime())) {\n        throw new Error(\"Invalid date format\");\n      }\n\n      return {\n        ...rawTour,\n        date_from: dateFrom,\n        date_to: dateTo,\n      };\n    },\n    enabled: !!id, // Запрос выполняется только если есть id\n  });\n\n  if (isPending) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  if (!data) return <p>Tour not found</p>;\n\n  return (\n    <div className=\"InfoSide\">\n      <Card key={data.id}>\n        <CardHeader>\n          <h2>{data.title}</h2>\n        </CardHeader>\n        <CardBody>\n          <h3>{data.country}</h3>\n          <h3>Rating: {data.rating}</h3>\n          <h3>\n            {data.date_from.toLocaleDateString()} -{\" \"}\n            {data.date_to.toLocaleDateString()}\n          </h3>\n          <h3>Duration: {data.duration} days</h3>\n          <h3>Опис: {data.detailed_description}</h3>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,mBAAmB;AAC9D,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAc9C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAM;IAAEM,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAC;IAC1CU,QAAQ,EAAE,CAAC,UAAU,EAAEJ,EAAE,CAAC;IAAE;IAC5BK,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,cAAcP,EAAE,EAAE,CAAC;MAC/C,IAAI,CAACM,OAAO,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MAClD,MAAMC,OAAY,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,CAAC;MAEzCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,OAAO,CAAC,CAAC,CAAC;;MAEvC,MAAMI,QAAQ,GAAG,IAAIC,IAAI,CAACL,OAAO,CAACM,SAAS,CAAC;MAC5C,MAAMC,MAAM,GAAG,IAAIF,IAAI,CAACL,OAAO,CAACQ,OAAO,CAAC;;MAExC;MACA,IAAIC,KAAK,CAACL,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,IAAID,KAAK,CAACF,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;QACxD,MAAM,IAAIX,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,OAAO;QACL,GAAGC,OAAO;QACVM,SAAS,EAAEF,QAAQ;QACnBI,OAAO,EAAED;MACX,CAAC;IACH,CAAC;IACDI,OAAO,EAAE,CAAC,CAACrB,EAAE,CAAE;EACjB,CAAC,CAAC;EAEF,IAAIC,SAAS,EAAE,oBAAOJ,OAAA;IAAAyB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACvC,IAAIxB,KAAK,EAAE,oBAAOL,OAAA;IAAAyB,QAAA,GAAG,SAAO,EAACpB,KAAK,CAACyB,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAI,CAACvB,IAAI,EAAE,oBAAON,OAAA;IAAAyB,QAAA,EAAG;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEvC,oBACE7B,OAAA;IAAK+B,SAAS,EAAC,UAAU;IAAAN,QAAA,eACvBzB,OAAA,CAACN,IAAI;MAAA+B,QAAA,gBACHzB,OAAA,CAACJ,UAAU;QAAA6B,QAAA,eACTzB,OAAA;UAAAyB,QAAA,EAAKnB,IAAI,CAAC0B;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACb7B,OAAA,CAACL,QAAQ;QAAA8B,QAAA,gBACPzB,OAAA;UAAAyB,QAAA,EAAKnB,IAAI,CAAC2B;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB7B,OAAA;UAAAyB,QAAA,GAAI,UAAQ,EAACnB,IAAI,CAAC4B,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9B7B,OAAA;UAAAyB,QAAA,GACGnB,IAAI,CAACa,SAAS,CAACgB,kBAAkB,CAAC,CAAC,EAAC,IAAE,EAAC,GAAG,EAC1C7B,IAAI,CAACe,OAAO,CAACc,kBAAkB,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACL7B,OAAA;UAAAyB,QAAA,GAAI,YAAU,EAACnB,IAAI,CAAC8B,QAAQ,EAAC,OAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC7B,OAAA;UAAAyB,QAAA,GAAI,4BAAM,EAACnB,IAAI,CAAC+B,oBAAoB;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA,GAbFvB,IAAI,CAACH,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApDWD,QAAQ;EAAA,QACJH,SAAS,EAEWD,QAAQ;AAAA;AAAAyC,EAAA,GAHhCrC,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}